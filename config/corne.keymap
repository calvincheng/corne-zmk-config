/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <150>;
};

&mt {
    tapping-term-ms = <150>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "tap-dance-media";
            #binding-cells = <0>;
            bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREV>;
        };
    };

    combos {
        compatible = "zmk,combos";

        spotlight {
            bindings = <&kp LG(SPACE)>;
            key-positions = <16 15>;
            layers = <2>;
        };

        screenshot {
            bindings = <&kp LS(LG(NUMBER_4))>;
            key-positions = <17 16>;
            layers = <2>;
        };

        word-bksp {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <11 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&kp TAB        &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P            &kp BSPC
&mt LCTRL ESC  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &lt 4 SEMICOLON  &kp SQT
&kp LSHFT      &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH         &kp RET
                             &kp LGUI  &mo 2  &kp SPACE    &kp RET  &mo 1  &kp RALT
            >;
        };

        raise_layer {
            label = "Raise";
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6  &kp N7     &kp N8     &kp N9            &kp N0             &kp BSPC
&trans     &trans  &trans  &trans    &trans  &trans       &trans  &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&kp LSHFT  &trans  &trans  &trans    &trans  &trans       &trans  &trans     &trans     &trans            &trans             &trans
                           &kp LGUI  &trans  &kp SPACE    &trans  &trans     &kp RALT
            >;
        };

        lower_layer {
            label = "Lower";
            bindings = <
&trans  &kp SINGLE_QUOTE  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp PERCENT    &kp AMPERSAND  &trans      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PERCENT   &trans
&trans  &kp EXCL          &kp MINUS      &kp PLUS          &kp EQUAL          &kp HASH       &kp PIPE       &kp COLON   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp QUESTION  &trans
&trans  &kp CARET         &kp SLASH      &kp ASTERISK      &kp BACKSLASH      &trans         &kp TILDE      &kp DOLLAR  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT        &trans
                                         &kp LGUI          &trans             &kp SPACE      &trans         &trans      &kp RALT
            >;
        };

        ADJUST {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans        &trans        &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &kp C_VOL_DN  &kp C_VOL_UP  &td0    &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans        &trans        &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans        &trans
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                        &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
